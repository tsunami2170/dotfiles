################
##  settings  ##
################

# durations
if [ "$#" -eq 3 ]; then
    WORK_MIN=$1
    REST_MIN=$2
    SESSION_COUNT=$3
else
    WORK_MIN=25
    REST_MIN=5
    SESSION_COUNT=8
fi

WORK_DURATION=$((WORK_MIN * 60))
REST_DURATION=$((REST_MIN * 60))

# refrence at
SOUND="/usr/share/sounds/freedesktop/stereo/dialog-information.oga"
FONT="-d $HOME/.figlet -f Georgia11"

#################
##  functions  ##
#################

function render() {
	cols=$(tput cols)
	printf "\033[H"
	echo "$1"
}

function notificate() {
	clear
	output=$(figlet $FONT -w "$cols" "*******")
	render "$output"
    notify-send "健康通知" "$1"
	paplay "$SOUND"
}

function measure_time() {
	clear
	for ((i = "$1"; i >= 0; i--)); do
		min=$((i / 60))
		sec=$((i % 60))
		TIME=$(printf "%02d:%02d" "$min" "$sec")
		output=$(figlet $FONT -w "$cols" "$2$3/$TIME     ")
		render "$output"
		sleep 1
	done
}

#################
##  operation  ##
#################

for ((count = 0; count < $SESSION_COUNT; count++)); do
	# For work
	measure_time WORK_DURATION "W" "$count"
	notificate "休憩していますか？" 

	if ((count == $SESSION_COUNT - 1)); then
		break
	fi

	# For rest
	measure_time REST_DURATION "R" "$count"
	notificate "休憩時間が終了しました" 
done

zenity --info --title="健康通知" --text="display dialog \"半日終了しました。休憩してください\"" --width=300
